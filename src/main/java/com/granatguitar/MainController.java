package com.granatguitar;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.granatguitar.UserData;
import com.granatguitar.UserRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	Logger logger = LoggerFactory.getLogger(MainController.class);
	
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		UserData n = new UserData();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<UserData> getAllUsers() { 
		// serialize returned object into JSON 
		// (@ResponseBody annotation not necessary if we had used @RestController)
		return userRepository.findAll();  // returns Iterable<UserData>
	}
	
	@GetMapping(path="/findbyid")
	public @ResponseBody Optional<UserData> getById(@RequestParam Integer id) {
		return userRepository.findById(id);
	}
	
	/*
	 * TODO: add test exception handling. 
	 * 2019-02-07 17:59:39 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver -
	 *  Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: 
	 *  Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer';
	 *   nested exception is java.lang.NumberFormatException: For input string: "x"]
	 *   
	 *   Database error (table disappeared)
	 *   2019-02-07 18:02:02 INFO  o.h.e.i.DefaultLoadEventListener - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: could not extract ResultSet
org.hibernate.exception.SQLGrammarException: could not extract ResultSet
	 *   2019-02-07 18:02:02 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: ORA-00942: table or view does not exist

	 */
	
}